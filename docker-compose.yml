services:
  redis:
    image: redis
    ports: ["6379:6379"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Support both internal (container-to-container) and external (host) connections
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  kafka-setup:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...'
      
        # Wait and retry logic for Kafka to be fully ready
        max_attempts=30
        attempt=1
        until kafka-topics --bootstrap-server kafka:29092 --list; do
          if [ \$attempt -eq \$max_attempts ]; then
            echo 'Max attempts reached. Kafka may not be ready.'
            exit 1
          fi
          echo \"Kafka not ready yet, waiting 5 seconds... (attempt \$attempt/\$max_attempts)\"
          sleep 5
          attempt=\$((attempt + 1))
        done
      
        echo 'Kafka is ready! Creating topics...'
      
        # Create the appointment-events topic
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic appointment-events --partitions 1 --replication-factor 1
      
        echo 'Topics created successfully:'
        kafka-topics --bootstrap-server kafka:29092 --list
      
        echo 'Setup completed successfully!'
      "
    restart: "no"

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672", "15672:15672"]